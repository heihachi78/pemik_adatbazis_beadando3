-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cases
(
    case_id serial NOT NULL,
    purchase_id integer NOT NULL,
    partner_case_number character varying(100) COLLATE pg_catalog."default",
    due_date date NOT NULL,
    amount numeric(16, 3) NOT NULL,
    calculated_purchase_value numeric(16, 3),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT case_pkey PRIMARY KEY (case_id)
);

CREATE TABLE IF NOT EXISTS public.cities
(
    city_id serial NOT NULL,
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    region_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT cities_pkey PRIMARY KEY (city_id)
);

CREATE TABLE IF NOT EXISTS public.debtor_types
(
    debtor_type_id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT debtor_type_pkey PRIMARY KEY (debtor_type_id)
);

CREATE TABLE IF NOT EXISTS public.debtors
(
    debtor_id serial NOT NULL,
    case_id integer NOT NULL,
    person_id integer NOT NULL,
    debtor_type_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT debtor_pkey PRIMARY KEY (debtor_id),
    CONSTRAINT debtor_debtor_type_ukey UNIQUE (case_id, debtor_type_id, person_id)
);

CREATE TABLE IF NOT EXISTS public.genders
(
    gender_id serial NOT NULL,
    name character varying(10) NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT genders_pkey PRIMARY KEY (gender_id)
);

CREATE TABLE IF NOT EXISTS public.partners
(
    partner_id serial NOT NULL,
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    sector_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT partners_pkey PRIMARY KEY (partner_id)
);

CREATE TABLE IF NOT EXISTS public.persons
(
    person_id serial NOT NULL,
    first_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    birth_place_city_id integer NOT NULL,
    birth_date date NOT NULL,
    birth_name character varying(150) COLLATE pg_catalog."default",
    mother_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    death_date date,
    gender_id integer NOT NULL,
    bank_account_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT persons_pkey PRIMARY KEY (person_id)
);

CREATE TABLE IF NOT EXISTS public.purchases
(
    purchase_id serial NOT NULL,
    partner_id integer NOT NULL,
    batch_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    purchased_at date NOT NULL,
    batch_purchase_value integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT purchases_pkey PRIMARY KEY (purchase_id)
);

CREATE TABLE IF NOT EXISTS public.regions
(
    region_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT regions_pkey PRIMARY KEY (region_id)
);

CREATE TABLE IF NOT EXISTS public.sectors
(
    sector_id serial NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT sectors_pkey PRIMARY KEY (sector_id)
);

CREATE TABLE IF NOT EXISTS public.test
(
    n integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.bank_accounts
(
    bank_account_id serial NOT NULL,
    account_number character(24) NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    updated_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT bank_accounts_pkey PRIMARY KEY (bank_account_id)
);

ALTER TABLE IF EXISTS public.cases
    ADD CONSTRAINT case_purchase_fkey FOREIGN KEY (purchase_id)
    REFERENCES public.purchases (purchase_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_case_purchase_fkey
    ON public.cases(purchase_id);


ALTER TABLE IF EXISTS public.cities
    ADD CONSTRAINT city_region_fkey FOREIGN KEY (region_id)
    REFERENCES public.regions (region_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.debtors
    ADD CONSTRAINT debtor_case_fkey FOREIGN KEY (case_id)
    REFERENCES public.cases (case_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_debtor_case_fkey
    ON public.debtors(case_id);


ALTER TABLE IF EXISTS public.debtors
    ADD CONSTRAINT debtor_debtor_type_fkey FOREIGN KEY (debtor_type_id)
    REFERENCES public.debtor_types (debtor_type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.debtors
    ADD CONSTRAINT debtor_person_fkey FOREIGN KEY (person_id)
    REFERENCES public.persons (person_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_debtor_person_fkey
    ON public.debtors(person_id);


ALTER TABLE IF EXISTS public.partners
    ADD CONSTRAINT parner_sector_fkey FOREIGN KEY (sector_id)
    REFERENCES public.sectors (sector_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_fk_parner_sector
    ON public.partners(sector_id);


ALTER TABLE IF EXISTS public.persons
    ADD CONSTRAINT person_birth_city_fkey FOREIGN KEY (birth_place_city_id)
    REFERENCES public.cities (city_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.persons
    ADD CONSTRAINT person_gender_fkey FOREIGN KEY (gender_id)
    REFERENCES public.genders (gender_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.persons
    ADD CONSTRAINT person_bank_account_fkey FOREIGN KEY (bank_account_id)
    REFERENCES public.bank_accounts (bank_account_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.purchases
    ADD CONSTRAINT purchase_partner_fkey FOREIGN KEY (partner_id)
    REFERENCES public.partners (partner_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS fki_fk_purchase_partner
    ON public.purchases(partner_id);

END;
